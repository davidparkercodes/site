---
import Site from '@layouts/Site.astro'
import { JsonLd } from '@utils/seo'
import { site } from '@utils/site'
import { getCollection } from 'astro:content'

const base = import.meta.env.BASE_URL
const join = (b: string, p: string) => `${b.replace(/\/$/, '')}/${p.replace(/^\//, '')}`

const projects = await getCollection('projects', ({ data }) => !data.draft && data.featured)
const sortedProjects = projects.sort((a, b) => a.data.order - b.data.order)

const articles = await getCollection('articles', ({ data }) => !data.draft)
const sortedArticles = articles.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
---
<Site>
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "{site.author.name}",
      "email": "mailto:{site.author.email}",
      "telephone": "{site.author.phone}",
      "address": { "@type": "PostalAddress", "addressLocality": "{site.author.location}" },
      "url": "{site.url}"
    }
  </script>
  <section class="px-6 md:px-8 py-16">
    <div class="mx-auto max-w-4xl">
      <h1 class="text-4xl md:text-5xl font-mono tracking-tight">
        Software Architect
      </h1>
      <div class="mt-2 text-xl md:text-2xl font-mono text-zinc-400">
        <span class="text-cyan-400">&amp;&amp;</span> Full-Stack Software Engineer
      </div>
      <div class="text-xl md:text-2xl font-mono text-zinc-400">
        <span class="text-cyan-400">&amp;&amp;</span> Expert Problem Solver
      </div>
      <p class="mt-4 text-zinc-600 dark:text-zinc-400 max-w-prose">
        Engineer focused on shipping fast, reliable, and polished experiences. I like crisp UI, good DX, and boringly robust systems.
      </p>
    </div>
  </section>
  <section class="px-6 md:px-8 pb-16">
    <div class="mx-auto max-w-4xl">
      <h2 class="text-2xl font-mono font-bold">Projects</h2>
      <p class="mt-2 text-zinc-600 dark:text-zinc-400">
        I've worked on numerous projects throughout my career, but these represent recent work where I've served as the technical lead. Each showcases modern technologies and architectural decisions I've driven.
      </p>
      <div class="mt-6 grid grid-cols-1 gap-4">
        {sortedProjects.map((project) => (
          <a href={join(base, `projects/${project.slug}`)} class="group rounded-lg border border-white/10 bg-cyan-950/30 p-5 interactive hover:bg-cyan-950/40">
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="font-mono text-lg font-bold flex items-center gap-2">
                  <svg class="w-7 h-7 flex-shrink-0" fill="none" stroke="#00ffff" strokeWidth="2" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                  {project.data.title}
                </div>
                <p class="mt-1 text-zinc-600 dark:text-zinc-400">
                  {project.data.description}
                </p>
                <div class="flex flex-wrap gap-1.5 mt-3">
                  {project.data.technologies.map((tech) => (
                    <span class="text-xs font-mono px-2 py-0.5 rounded-full border border-zinc-700 text-zinc-500 dark:text-zinc-400">
                      {tech}
                    </span>
                  ))}
                </div>
              </div>
              <span class="opacity-0 group-hover:opacity-100 transition-opacity text-zinc-400 ml-4">→</span>
            </div>
          </a>
        ))}
      </div>
    </div>
  </section>
  <section class="px-6 md:px-8 pb-16">
    <div class="mx-auto max-w-4xl">
      <h2 class="text-2xl font-mono font-bold">Articles</h2>
      <div class="mt-6 grid grid-cols-1 gap-4">
        {sortedArticles.map((article) => (
          <a href={join(base, `articles/${article.slug}`)} class="group rounded-lg border border-white/10 bg-cyan-950/30 p-5 interactive hover:bg-cyan-950/40">
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="font-mono text-lg font-bold flex items-center gap-2">
                  <svg class="w-7 h-7 flex-shrink-0" fill="none" stroke="#ffff00" strokeWidth="2" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h12a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                  {article.data.title}
                </div>
                <p class="mt-1 text-zinc-600 dark:text-zinc-400">
                  {article.data.description}
                </p>
                {article.data.tags && article.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-1.5 mt-3">
                    {article.data.tags.map((tag) => (
                      <span class="text-xs font-mono px-2 py-0.5 rounded-full border border-zinc-600 text-zinc-400">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>
              <span class="opacity-0 group-hover:opacity-100 transition-opacity text-zinc-400 ml-4">→</span>
            </div>
          </a>
        ))}
      </div>
    </div>
  </section>
</Site>

