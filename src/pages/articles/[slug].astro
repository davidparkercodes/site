---
import Site from '@layouts/Site.astro'
import { CollectionEntry, getCollection } from 'astro:content'
import { JsonLd } from '@utils/seo'
import { site } from '@utils/site'
export async function getStaticPaths() {
  const posts = await getCollection('articles')
  return posts.filter(p => !p.data.draft).map(p => ({ params: { slug: p.slug }, props: { post: p } }))
}
const { post } = Astro.props as { post: CollectionEntry<'articles'> }
const { Content } = await post.render()
---
<Site>
  <script is:raw>{JsonLd({ data: {
    '@context': 'https://schema.org',
    '@type': 'Article',
    headline: post.data.title,
    description: post.data.description,
    datePublished: post.data.pubDate.toISOString(),
    dateModified: (post.data.updatedDate || post.data.pubDate).toISOString(),
    author: { '@type': 'Person', name: site.author.name },
    mainEntityOfPage: `${site.url}/articles/${post.slug}`
  }}).$$render()}</script>
  <section class="px-6 md:px-8 py-12">
    <article class="mx-auto max-w-3xl prose dark:prose-invert">
      <h1 class="font-mono">{post.data.title}</h1>
      <p class="text-zinc-600 dark:text-zinc-400">{post.data.description}</p>
      <Content />
    </article>
  </section>
  <script>
    import('/src/utils/code-copy.ts').then(m=> m.default())
  </script>
</Site>

